import asyncio
import logging
from aiogram import Bot, Dispatcher, types
from aiogram.fsm.storage.memory import MemoryStorage
from aiogram.filters import Command
from supabase import create_client, Client
from aiogram.types import CallbackQuery
from aiogram.utils.keyboard import InlineKeyboardBuilder
from utils import send_message_with_image, check_and_end_giveaways, check_usernames
from active_giveaways import register_active_giveaways_handlers
from create_giveaway import register_create_giveaway_handlers
from created_giveaways import register_created_giveaways_handlers
from my_participations import register_my_participations_handlers
from congratulations_messages import register_congratulations_messages
from congratulations_messages_active import register_congratulations_messages_active
from new_public import register_new_public
from aiogram.fsm.context import FSMContext
from fastapi import FastAPI, HTTPException
from pydantic import BaseModel
import uvicorn
from hypercorn.config import Config
from hypercorn.asyncio import serve

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(level=logging.INFO)

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞ –∏ –¥–∏—Å–ø–µ—Ç—á–µ—Ä–∞
BOT_TOKEN = '7412394623:AAEkxMj-WqKVpPfduaY8L88YO1I_7zUIsQg'
bot = Bot(token=BOT_TOKEN)
storage = MemoryStorage()
dp = Dispatcher(storage=storage)

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è Supabase
supabase_url = 'https://olbnxtiigxqcpailyecq.supabase.co'
supabase_key = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Im9sYm54dGlpZ3hxY3BhaWx5ZWNxIiwicm9sZSI6ImFub24iLCJpYXQiOjE3MzAxMjQwNzksImV4cCI6MjA0NTcwMDA3OX0.dki8TuMUhhFCoUVpHrcJo4V1ngKEnNotpLtZfRjsePY'
supabase: Client = create_client(supabase_url, supabase_key)

user_selected_communities = {}
paid_users = {}

# –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ –∏–∑ –¥—Ä—É–≥–∏—Ö –º–æ–¥—É–ª–µ–π
register_active_giveaways_handlers(dp, bot, supabase)
register_create_giveaway_handlers(dp, bot, supabase)
register_created_giveaways_handlers(dp, bot, supabase)
register_my_participations_handlers(dp, bot, supabase)
register_congratulations_messages(dp, bot, supabase)
register_congratulations_messages_active(dp, bot, supabase)
register_new_public(dp, bot, supabase)

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è FastAPI
app = FastAPI()

# –ú–æ–¥–µ–ª—å –¥–ª—è –∑–∞–ø—Ä–æ—Å–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–æ–¥–ø–∏—Å–∫–∏
class SubscriptionRequest(BaseModel):
    chat_id: int
    user_id: int

# –≠–Ω–¥–ø–æ–∏–Ω—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–æ–¥–ø–∏—Å–∫–∏ –Ω–∞ –∫–∞–Ω–∞–ª
@app.post("/api/check-subscription")
async def check_subscription(request: SubscriptionRequest):
    try:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å –ø–æ–¥–ø–∏—Å–∫–∏ —á–µ—Ä–µ–∑ Telegram API
        chat_member = await bot.get_chat_member(chat_id=request.chat_id, user_id=request.user_id)
        is_subscribed = chat_member.status in ["creator", "administrator", "member"]
        return {"isSubscribed": is_subscribed, "error": None}
    except Exception as e:
        logging.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –ø–æ–¥–ø–∏—Å–∫–∏: {e}")
        return {"isSubscribed": False, "error": str(e)}

# –≠–Ω–¥–ø–æ–∏–Ω—Ç –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Å—ã–ª–∫–∏ –Ω–∞ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ
@app.get("/api/get-invite-link/{chat_id}")
async def get_invite_link(chat_id: int):
    try:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —á–∞—Ç –∏ –µ—Å—Ç—å –ª–∏ —É –±–æ—Ç–∞ –ø—Ä–∞–≤–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
        chat = await bot.get_chat(chat_id)
        if chat.invite_link:
            return {"inviteLink": chat.invite_link, "error": None}
        else:
            # –ï—Å–ª–∏ —Å—Å—ã–ª–∫–∞ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç, —Å–æ–∑–¥–∞–µ–º –Ω–æ–≤—É—é
            invite_link = await bot.export_chat_invite_link(chat_id)
            return {"inviteLink": invite_link, "error": None}
    except Exception as e:
        logging.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å—Å—ã–ª–∫–∏ –Ω–∞ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ: {e}")
        # –ï—Å–ª–∏ –±–æ—Ç –Ω–µ –∏–º–µ–µ—Ç –ø—Ä–∞–≤ –∏–ª–∏ —á–∞—Ç –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –æ—à–∏–±–∫—É
        if "403" in str(e) or "400" in str(e):
            return {"inviteLink": None, "error": "–ë–æ—Ç –Ω–µ –∏–º–µ–µ—Ç –ø—Ä–∞–≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –∏–ª–∏ —á–∞—Ç –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç"}
        return {"inviteLink": None, "error": str(e)}

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start
@dp.message(Command("start"))
async def cmd_start(message: types.Message):
    keyboard = types.InlineKeyboardMarkup(inline_keyboard=[
        [types.InlineKeyboardButton(text="üéÅ –°–æ–∑–¥–∞—Ç—å —Ä–æ–∑—ã–≥—Ä—ã—à", callback_data="create_giveaway")],
        [types.InlineKeyboardButton(text="üìã –ú–æ–∏ —Ä–æ–∑—ã–≥—Ä—ã—à–∏", callback_data="created_giveaways")],
        [types.InlineKeyboardButton(text="üî• –ê–∫—Ç–∏–≤–Ω—ã–µ —Ä–æ–∑—ã–≥—Ä—ã—à–∏", callback_data="active_giveaways")],
        [types.InlineKeyboardButton(text="üéØ –ú–æ–∏ —É—á–∞—Å—Ç–∏—è", callback_data="my_participations")],
    ])
    await send_message_with_image(bot, message.chat.id, "<tg-emoji emoji-id='5199885118214255386'>üëã</tg-emoji> –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å! –í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:", reply_markup=keyboard)

@dp.message(Command("help"))
async def cmd_help(message: types.Message):
    try:
        help_text = (
            "<b><tg-emoji emoji-id='5282843764451195532'>üñ•</tg-emoji> –ö–∞–∫ —Å–æ–∑–¥–∞—Ç—å —Ä–æ–∑—ã–≥—Ä—ã—à</b>\n"
            "<blockquote expandable>–ü–µ—Ä–≤–æ–µ, —á—Ç–æ –≤–∞–º –Ω—É–∂–Ω–æ —Å–¥–µ–ª–∞—Ç—å, ‚Äî —ç—Ç–æ –Ω–∞–∂–∞—Ç—å –≤ –≥–ª–∞–≤–Ω–æ–º –º–µ–Ω—é –∫–Ω–æ–ø–∫—É ¬´üéÅ –°–æ–∑–¥–∞—Ç—å —Ä–æ–∑—ã–≥—Ä—ã—à¬ª. –ü–æ—Å–ª–µ —ç—Ç–æ–≥–æ –≤–∞–º –ø–æ—Ç—Ä–µ–±—É–µ—Ç—Å—è –ø–æ—à–∞–≥–æ–≤–æ –≤–≤–µ—Å—Ç–∏:\n"
            "<tg-emoji emoji-id='5382322671679708881'>1Ô∏è‚É£</tg-emoji> –ù–∞–∑–≤–∞–Ω–∏–µ —Ä–æ–∑—ã–≥—Ä—ã—à–∞\n"
            "<tg-emoji emoji-id='5381990043642502553'>2Ô∏è‚É£</tg-emoji> –û–ø–∏—Å–∞–Ω–∏–µ\n"
            "<tg-emoji emoji-id='5381879959335738545'>3Ô∏è‚É£</tg-emoji> –ú–µ–¥–∏–∞—Ñ–∞–π–ª (–µ—Å–ª–∏ –æ–Ω –Ω–µ–æ–±—Ö–æ–¥–∏–º)\n"
            "<tg-emoji emoji-id='5382054253403577563'>4Ô∏è‚É£</tg-emoji> –î–∞—Ç—É –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è\n"
            "<tg-emoji emoji-id='5391197405553107640'>5Ô∏è‚É£</tg-emoji> –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–±–µ–¥–∏—Ç–µ–ª–µ–π</blockquote>\n\n"

            "<b><tg-emoji emoji-id='5424818078833715060'>üì£</tg-emoji> –ö–∞–∫ –æ–ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å —Å–æ–∑–¥–∞–Ω–Ω—ã–π —Ä–æ–∑—ã–≥—Ä—ã—à</b>\n"
            "<blockquote expandable>–ß—Ç–æ–±—ã –æ–ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å —Ä–æ–∑—ã–≥—Ä—ã—à, —Å–Ω–∞—á–∞–ª–∞ –ø—Ä–∏–≤—è–∂–∏—Ç–µ –∫–∞–Ω–∞–ª—ã –∏–ª–∏ –≥—Ä—É–ø–ø—ã. –î–ª—è —ç—Ç–æ–≥–æ:\n"
            "<tg-emoji emoji-id='5382322671679708881'>1Ô∏è‚É£</tg-emoji> –ü–µ—Ä–µ–π–¥–∏—Ç–µ –≤ –≤–∞—à —Å–æ–∑–¥–∞–Ω–Ω—ã–π —Ä–æ–∑—ã–≥—Ä—ã—à\n"
            "<tg-emoji emoji-id='5381990043642502553'>2Ô∏è‚É£</tg-emoji> –ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É ¬´–ü—Ä–∏–≤—è–∑–∞—Ç—å —Å–æ–æ–±—â–µ—Å—Ç–≤–∞¬ª\n"
            "<tg-emoji emoji-id='5381879959335738545'>3Ô∏è‚É£</tg-emoji> –ù–∞–∂–º–∏—Ç–µ ¬´‚ûï –ù–æ–≤—ã–π –ø–∞–±–ª–∏–∫¬ª\n"
            "<tg-emoji emoji-id='5382054253403577563'>4Ô∏è‚É£</tg-emoji> –î–æ–±–∞–≤—å—Ç–µ –±–æ—Ç–∞ –≤ –≤–∞—à –∫–∞–Ω–∞–ª –∏–ª–∏ –≥—Ä—É–ø–ø—É —Å –ø—Ä–∞–≤–∞–º–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞\n"
            "<tg-emoji emoji-id='5391197405553107640'>5Ô∏è‚É£</tg-emoji> –ë–æ—Ç —É–≤–µ–¥–æ–º–∏—Ç –≤–∞—Å –æ —É—Å–ø–µ—à–Ω–æ–π –ø—Ä–∏–≤—è–∑–∫–µ ‚úÖ\n"
            "–ü–æ—Å–ª–µ –ø—Ä–∏–≤—è–∑–∫–∏ —Å–æ–æ–±—â–µ—Å—Ç–≤–∞ –≤ —Ä–∞–∑–¥–µ–ª–µ —Å–æ–∑–¥–∞–Ω–Ω–æ–≥–æ —Ä–æ–∑—ã–≥—Ä—ã—à–∞ –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É ¬´üì¢ –û–ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å —Ä–æ–∑—ã–≥—Ä—ã—à¬ª –∏ –≤—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–∏–≤—è–∑–∞–Ω–Ω—ã–µ —Å–æ–æ–±—â–µ—Å—Ç–≤–∞, –≤ –∫–æ—Ç–æ—Ä—ã—Ö —Ö–æ—Ç–∏—Ç–µ —Ä–∞–∑–º–µ—Å—Ç–∏—Ç—å —Ä–æ–∑—ã–≥—Ä—ã—à.</blockquote>\n\n"

            "<b><tg-emoji emoji-id='5341715473882955310'>‚öôÔ∏è</tg-emoji> –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏</b>\n"
            "<blockquote expandable>–í —Å–æ–∑–¥–∞–Ω–Ω–æ–º —Ä–æ–∑—ã–≥—Ä—ã—à–µ –≤—ã –º–æ–∂–µ—Ç–µ:\n"
            "<tg-emoji emoji-id='5395444784611480792'>‚úèÔ∏è</tg-emoji> –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –Ω–∞–∑–≤–∞–Ω–∏–µ, –æ–ø–∏—Å–∞–Ω–∏–µ, –º–µ–¥–∏–∞—Ñ–∞–π–ª –∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–±–µ–¥–∏—Ç–µ–ª–µ–π\n"
            "<tg-emoji emoji-id='5443038326535759644'>üí¨</tg-emoji> –ò–∑–º–µ–Ω–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –ø–æ–±–µ–¥–∏—Ç–µ–ª–µ–π\n"
            "<tg-emoji emoji-id='5397916757333654639'>‚ûï</tg-emoji> –î–æ–±–∞–≤–∏—Ç—å –∑–∞–¥–∞–Ω–∏–µ ¬´–ü—Ä–∏–≥–ª–∞—Å–∏—Ç—å –¥—Ä—É–≥–∞¬ª –≤ —É—Å–ª–æ–≤–∏—è —É—á–∞—Å—Ç–∏—è</blockquote>\n\n"

            "<b><tg-emoji emoji-id='5447410659077661506'>üåê</tg-emoji> –ß—Ç–æ –º–æ–∂–Ω–æ –¥–µ–ª–∞—Ç—å, –∫–æ–≥–¥–∞ —Ä–æ–∑—ã–≥—Ä—ã—à –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω</b>\n"
            "<blockquote expandable>–í –≥–ª–∞–≤–Ω–æ–º –º–µ–Ω—é –ø–µ—Ä–µ–π–¥–∏—Ç–µ –≤ —Ä–∞–∑–¥–µ–ª ¬´üî• –ê–∫—Ç–∏–≤–Ω—ã–µ —Ä–æ–∑—ã–≥—Ä—ã—à–∏¬ª, –≤—ã–±–µ—Ä–∏—Ç–µ –Ω—É–∂–Ω—ã–π —Ä–æ–∑—ã–≥—Ä—ã—à. –í –Ω–µ–º –≤—ã –º–æ–∂–µ—Ç–µ:\n"
            "<tg-emoji emoji-id='5395444784611480792'>‚úèÔ∏è</tg-emoji> –ü–æ–ª–Ω–æ—Å—Ç—å—é —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å —Ä–æ–∑—ã–≥—Ä—ã—à (–≤—Å–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è –æ—Ç—Ä–∞–∑—è—Ç—Å—è –≤ –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–Ω—ã—Ö –ø–æ—Å—Ç–∞—Ö)\n"
            "<tg-emoji emoji-id='5413879192267805083'>üóì</tg-emoji> –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –∑–∞–≤–µ—Ä—à–∏—Ç—å —Ä–æ–∑—ã–≥—Ä—ã—à</blockquote>\n\n"

            "<b><tg-emoji emoji-id='5197630131534836123'>ü•≥</tg-emoji> –ß—Ç–æ –±—É–¥–µ—Ç, –∫–æ–≥–¥–∞ —Ä–æ–∑—ã–≥—Ä—ã—à –∑–∞–≤–µ—Ä—à–∏—Ç—Å—è</b>\n"
            "<blockquote expandable>–ü–æ—Å–ª–µ –æ–∫–æ–Ω—á–∞–Ω–∏—è –≤—Ä–µ–º–µ–Ω–∏ —Ä–æ–∑—ã–≥—Ä—ã—à–∞ –±–æ—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏:\n"
            "<tg-emoji emoji-id='5436386989857320953'>ü§ë</tg-emoji> –†–∞–Ω–¥–æ–º–Ω–æ –æ–ø—Ä–µ–¥–µ–ª–∏—Ç –ø–æ–±–µ–¥–∏—Ç–µ–ª–µ–π\n"
            "<tg-emoji emoji-id='5451882707875276247'>üïØ</tg-emoji> –û–ø—É–±–ª–∏–∫—É–µ—Ç –≤ –ø—Ä–∏–≤—è–∑–∞–Ω–Ω—ã—Ö —Å–æ–æ–±—â–µ—Å—Ç–≤–∞—Ö –ø–æ—Å—Ç –æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–∏ —Å —É–∫–∞–∑–∞–Ω–∏–µ–º –ø–æ–±–µ–¥–∏—Ç–µ–ª–µ–π –∏ –∫–Ω–æ–ø–∫–æ–π ¬´–†–µ–∑—É–ª—å—Ç–∞—Ç—ã¬ª (–ø—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ —É–≤–∏–¥—è—Ç –≥—Ä–∞—Ñ–∏–∫ —É—á–∞—Å—Ç–∏—è)\n"
            "<tg-emoji emoji-id='5461151367559141950'>üéâ</tg-emoji> –û—Ç–ø—Ä–∞–≤–∏—Ç –ø–æ–±–µ–¥–∏—Ç–µ–ª—è–º –ø–æ–∑–¥—Ä–∞–≤–∏—Ç–µ–ª—å–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ, –∑–∞–¥–∞–Ω–Ω–æ–µ –≤–∞–º–∏ —Ä–∞–Ω–µ–µ</blockquote>"
        )
        keyboard = InlineKeyboardBuilder()
        keyboard.button(text="üéÅ –°–æ–∑–¥–∞—Ç—å —Ä–æ–∑—ã–≥—Ä—ã—à", callback_data="create_giveaway")
        keyboard.button(text="üè† –í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="back_to_main_menu")
        keyboard.adjust(1)
        await bot.send_message(
            chat_id=message.chat.id,
            text=help_text,
            parse_mode="HTML",
            reply_markup=keyboard.as_markup()
        )
    except Exception as e:
        logging.error(f"–û—à–∏–±–∫–∞ –≤ cmd_help: {e}")
        await message.reply("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã /help.")

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
@dp.callback_query(lambda c: c.data == "back_to_main_menu")
async def back_to_main_menu(callback_query: CallbackQuery, state: FSMContext):
    await state.clear()
    await bot.answer_callback_query(callback_query.id)

    keyboard = InlineKeyboardBuilder()
    keyboard.button(text="üéÅ –°–æ–∑–¥–∞—Ç—å —Ä–æ–∑—ã–≥—Ä—ã—à", callback_data="create_giveaway")
    keyboard.button(text="üìã –ú–æ–∏ —Ä–æ–∑—ã–≥—Ä—ã—à–∏", callback_data="created_giveaways")
    keyboard.button(text="üî• –ê–∫—Ç–∏–≤–Ω—ã–µ —Ä–æ–∑—ã–≥—Ä—ã—à–∏", callback_data="active_giveaways")
    keyboard.button(text="üéØ –ú–æ–∏ —É—á–∞—Å—Ç–∏—è", callback_data="my_participations")
    keyboard.adjust(1)

    await send_message_with_image(
        bot,
        callback_query.message.chat.id,
        "<tg-emoji emoji-id='5210956306952758910'>üëÄ</tg-emoji> –í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:",
        reply_markup=keyboard.as_markup(),
        message_id=callback_query.message.message_id
    )

async def periodic_username_check():
    while True:
        await check_usernames(bot, supabase)
        await asyncio.sleep(60)  # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–∞–∂–¥—É—é –º–∏–Ω—É—Ç—É

# –ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞ –∏ API
async def main():
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–µ–∫—É—â—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ webhook
    webhook_info = await bot.get_webhook_info()
    logging.info(f"–¢–µ–∫—É—â–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ webhook: {webhook_info}")

    # –ï—Å–ª–∏ webhook —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω (url –Ω–µ –ø—É—Å—Ç–æ–π), —É–¥–∞–ª—è–µ–º –µ–≥–æ
    if webhook_info.url:
        await bot.delete_webhook(drop_pending_updates=True)
        logging.info("Webhook –±—ã–ª —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –∏ —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω")
    else:
        logging.info("Webhook –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")

    # –°–æ–∑–¥–∞–µ–º –∑–∞–¥–∞—á–∏ –¥–ª—è –ø–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫–∏—Ö –ø—Ä–æ–≤–µ—Ä–æ–∫
    check_task = asyncio.create_task(check_and_end_giveaways(bot, supabase))
    username_check_task = asyncio.create_task(periodic_username_check())

    # –ó–∞–ø—É—Å–∫–∞–µ–º polling –±–æ—Ç–∞ –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–π –∑–∞–¥–∞—á–µ
    bot_task = asyncio.create_task(dp.start_polling(bot))

    # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∏ –∑–∞–ø—É—Å–∫ FastAPI
    config = Config()
    config.bind = ["0.0.0.0:8000"]  # –ó–∞–ø—É—Å–∫–∞–µ–º API –Ω–∞ –ø–æ—Ä—Ç—É 8000
    api_task = asyncio.create_task(serve(app, config))

    try:
        # –û–∂–∏–¥–∞–µ–º –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –≤—Å–µ—Ö –∑–∞–¥–∞—á
        await asyncio.gather(bot_task, api_task)
    except Exception as e:
        logging.error(f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –≤ main: {e}")
    finally:
        check_task.cancel()
        username_check_task.cancel()
        api_task.cancel()

if __name__ == '__main__':
    asyncio.run(main())
